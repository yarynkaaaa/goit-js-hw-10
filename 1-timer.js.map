{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputimer = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\n\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    const currentDate = new Date();\n\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#e74c3c',\n        color: 'white',\n        progressBarColor: 'white',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n  locale: {\n    firstDayOfWeek: 1,\n  },\n};\n\nflatpickr(inputimer, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction startCountdown() {\n  if (!userSelectedDate) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please select a date and time first!',\n      position: 'topRight',\n      backgroundColor: '#f39c12',\n      color: 'white',\n      progressBarColor: 'white',\n    });\n    return;\n  }\n\n  const currentDate = new Date();\n  let msRemaining = userSelectedDate.getTime() - currentDate.getTime();\n  if (msRemaining <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      position: 'topRight',\n      backgroundColor: '#e74c3c',\n      color: 'white',\n      progressBarColor: 'white',\n    });\n    return;\n  }\n\n  inputimer.disabled = true;\n  startButton.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    msRemaining = userSelectedDate.getTime() - now.getTime();\n\n    if (msRemaining <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown complete!',\n        position: 'topRight',\n        backgroundColor: ' #59a10d',\n        color: 'white',\n        progressBarColor: 'white',\n      });\n      inputimer.disabled = false;\n      startButton.disabled = true;\n      return;\n    }\n\n    const time = convertMs(msRemaining);\n    updateTimerDisplay(time);\n  }, 1000);\n}\n\nstartButton.addEventListener('click', startCountdown);\n"],"names":["inputimer","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","countdownInterval","addLeadingZero","value","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","startCountdown","currentDate","msRemaining","now","time"],"mappings":"gyBAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EAEzDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBL,EAAmBK,EAAc,CAAC,EAI9BL,EAFgB,IAAI,MAGtBM,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,MAAO,QACP,iBAAkB,OAC1B,CAAO,EACDX,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,EACD,OAAQ,CACN,eAAgB,CACjB,CACH,EAEAY,EAAUb,EAAWU,CAAO,EAE5B,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DjB,EAAS,YAAcM,EAAeQ,CAAI,EAC1Cb,EAAU,YAAcK,EAAeS,CAAK,EAC5Cb,EAAY,YAAcI,EAAeU,CAAO,EAChDb,EAAY,YAAcG,EAAeW,CAAO,CAClD,CAEA,SAASE,GAAiB,CACxB,GAAI,CAACf,EAAkB,CACrBM,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,uCACT,SAAU,WACV,gBAAiB,UACjB,MAAO,QACP,iBAAkB,OACxB,CAAK,EACD,MACD,CAED,MAAMU,EAAc,IAAI,KACxB,IAAIC,EAAcjB,EAAiB,QAAS,EAAGgB,EAAY,QAAO,EAClE,GAAIC,GAAe,EAAG,CACpBX,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,MAAO,QACP,iBAAkB,OACxB,CAAK,EACD,MACD,CAEDZ,EAAU,SAAW,GACrBC,EAAY,SAAW,GAEvBM,EAAoB,YAAY,IAAM,CACpC,MAAMiB,EAAM,IAAI,KAGhB,GAFAD,EAAcjB,EAAiB,QAAS,EAAGkB,EAAI,QAAO,EAElDD,GAAe,EAAG,CACpB,cAAchB,CAAiB,EAC/Ba,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChER,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACT,SAAU,WACV,gBAAiB,WACjB,MAAO,QACP,iBAAkB,OAC1B,CAAO,EACDZ,EAAU,SAAW,GACrBC,EAAY,SAAW,GACvB,MACD,CAED,MAAMwB,EAAOX,EAAUS,CAAW,EAClCH,EAAmBK,CAAI,CACxB,EAAE,GAAI,CACT,CAEAxB,EAAY,iBAAiB,QAASoB,CAAc"}